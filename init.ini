; ==============================================================================
; Voting platform configuration file
; ==============================================================================
;
; This file contains all parameters for "branding" the voting platform to 
; specific organisations/for specific purposes. It also includes configurable 
; fields for the Policy model (built based on the initiative model) and its
; possible states, the idea to eventually enable both to be configurable
;
; parameters (*default)
; ------------------------------------------------------------------------------

[settings]
DEFAULT_TIMEZONE = Europe/Berlin
DEFAULT_LANGUAGE = en-us
VIRTUAL_HOST_LIST = localhost,vps573167.ovh.net
DEFAULT_FROM_EMAIL = keine-antwort@bewegung.jetzt
DEFAULT_CONTACT_EMAIL = hallo@bewegung.jetzt
THEME_CONTACT_EMAIL = support@bewegung.jetzt
INITIATIVE_SUPPORT_EMAIL = plenum-hilfe@bewegung.jetzt
CORS_ORIGIN_WHITELIST = bewegung.jetzt,portal.bewegung.jetzt
MIN_SEARCH_LENGTH = 3
URL_HOWTO_INITIATIVE = https://marktplatz.bewegung.jetzt/t/eine-initiative-starten-und-mitinitiatoren-einladen/2593

ACCOUNT_DELETION_EXPUNGE_HOURS = 0
PLATFORM_TITLE = Volt Europa
PLATFORM_SUB_TITLE = Collaborative Policy Platform
PLATFORM_TITLE_ACRONYM = Volt
PLATFORM_REGISTRATION_URL = https://volt.team/join
PLATFORM_LOGO_URL = /img/volt_logo_redesign.png


PLATFORM_BACKCOMPAT_GROUP_LIST = Prufungsteam
PLATFORM_BACKCOMPAT_PERMISSION_LIST = add_moderation
PLATFORM_BACKCOMPAT_INITIATORS_COUNT = 3
;PLATFORM_BACKCOMPAT_SUBJECT_TYPES = {% trans "Global Politics & International Cooperation" %}, {% trans "Education, Research & Culture" %}, {% trans "Interior Politics" %},{% trans "Net- & Media Politics" %},{% trans "Gender Equality" %},{% trans "Diversity & Integration" %},{% trans "Democracy & Transparency" %},{% trans "Health, Nutrition, Consumer Protection" %},{% trans "Environment, Mobility, Infrastructural Development" %},{% trans "Social Justice, Economy, Work & Finance" %}, {% trans "Other" %}
PLATFORM_BACKCOMPAT_INITIATIVE_TYPES = {% trans "Single Initiative" %}
PLATFORM_BACKCOMPAT_LEVEL_TYPES = {% trans "National Level" %}
PLATFORM_BACKCOMPAT_ABSTENTION_START = 2017,12,1
PLATFORM_BACKCOMPAT_SPEED_PHASE_END = 2017,8,21

PLATFORM_DEFAULT_URL = https://www.volteuropa.org/
PLATFORM_MARKETPLACE_URL = https://marktplatz.bewegung.jetzt
PLATFORM_LEGAL_URL = https://bewegung.jetzt/impressum/
PLATFORM_DATA_PROTECTION_URL = https://bewegung.jetzt/datenschutz/
INITIATIVE_TEMPLATE_URL = https://docs.google.com/document/d/1cih1abHKN1mpqN_YpfXE5pAozcAELJ68wJd4Yi8G1u4/edit
INITIATIVE_EXPLANATION_URL = https://bewegung.jetzt/2017/04/03/so-funktioniert-das-initiativprinzip/
PLATFORM_VOTING_REGULATION_URL = https://bewegung.jetzt/wp-content/uploads/2017/12/Abstimmungsordnung-Stand-27.-November-2017.pdf
PLATFORM_TECH_DEVELOPMENT_URL = https://marktplatz.bewegung.jetzt/c/weiter-entwicklung-plenum-marktplatz
PLATFORM_TECH_SUPPORT_URL = https://marktplatz.bewegung.jetzt/groups/Team_Tech_Plenum
PLATFORM_TECH_SOURCE_CODE_URL = https://github.com/DemokratieInBewegung/abstimmungstool
PLATFORM_TECH_DEVELOPMENT_TICKET_URL = https://github.com/DemokratieInBewegung/abstimmungstool/projects/3
PLATFORM_SOCIAL_MEDIA_LOGO_URL = /img/dib-logo-social.jpg


;SITE_FONT_CSS_URL = https://fonts.googleapis.com/css?family=Merriweather:300,400,400i,700|Rubik:400,400i,500,500i,700
SITE_FONT_CSS_URL = https://fonts.googleapis.com/css?family=Merriweather:300,400,400i,700|family=Ubuntu
SITE_THEME_CSS_URL = /static/dib.css
SITE_JS_URL = js/dib/utils.js

PLATFORM_UNDO_TIMEOUT = 30

; -------------------------- user configuration options ------------------------
; enforce unique emails (careful, ONLY ACTIVATE WHEN SETTING UP FROM SCRATCH)
USER_USE_UNIQUE_EMAILS = 0

; enforce diverse moderation
USER_USE_DIVERSE_MODERATION_TEAM = 0

; user use clear names instead of usernames
;USER_USE_CLEAR_NAMES = 1

; allow comments on arguments
USER_CAN_COMMENT_ARGUMENT = 0

; ---------------------------- moderator settings ------------------------------
[moderation_setting_list]
MINIMUM_MODERATOR_VOTES = 3
MINIMUM_ADDED_VOTES_FOR_CHALLENGE = 3
MINIMUM_ADDED_VOTES_FOR_REVIEW = 3
MINIMUM_MODERATOR_PERCENTAGE = 20
MINIMUM_FEMALE_MODERATOR_PERCENTAGE = 50
MINIMUM_DIVERSE_MODERATOR_PERCENTAGE = 25

; ----------------------------- language settings ------------------------------
; available languages on the platform
[alternative_language_list]
de = {% trans "German" %}
en = {% trans "English" %}

; --------------------------- groups and permissions ---------------------------
; requires: initadmin/management/commands/ => set_groups_and_permission to be run
[platform_group_list]
TEAM = policy_team
LEAD = policy_team_lead
BOARD = political_board

[platform_group_value_list]
TEAM = Policy Team Member
LEAD = Policy Team Lead
BOARD = Board Member

[platform_group_user_permission_mapping]
TEAM = user_can_localise,user_can_activate,user_can_reset,user_can_invite,user_can_diversify,policy_can_delete,policy_can_undelete,policy_can_hide,policy_can_unhide,policy_can_review,policy_can_invalidate,policy_can_discuss,policy_can_conclude
LEAD = user_can_localise,user_can_delete,user_can_activate,user_can_nominate,user_can_reset,user_can_invite,user_can_diversify,policy_can_delete,policy_can_undelete,policy_can_review,policy_can_hide,policy_can_unhide,policy_can_validate,policy_can_invalidate,policy_can_reject,policy_can_override,policy_can_discuss,policy_can_close,policy_can_release,policy_can_conclude,policy_can_publish
BOARD = policy_can_review

; values => permission-tite,model-to-apply-to
[platform_user_permission_list]
USER_CAN_LOCALISE = user_can_localise,auth.user
USER_CAN_DELETE = user_can_delete,auth.user
USER_CAN_ACTIVATE = user_can_activate,auth.user
USER_CAN_NOMINATE = user_can_nominate,auth.user
USER_CAN_RESET = user_can_reset,auth.user
USER_CAN_INVITE = user_can_invite,auth.user
USER_CAN_DIVERSIFY = user_can_diversify,auth.user
POLICY_CAN_DELETE = policy_can_delete,initproc.policy
POLICY_CAN_UNDELETE = policy_can_undelete,initproc.policy
POLICY_CAN_UNHIDE = policy_can_unhide,initproc.policy
POLICY_CAN_HIDE = policy_can_hide,initproc.policy
POLICY_CAN_REVIEW = policy_can_review,initproc.policy
POLICY_CAN_VALIDATE = policy_can_validate,initproc.policy
POLICY_CAN_INVALIDATE = policy_can_invalidate,initproc.policy
POLICY_CAN_REJECT = policy_can_reject,initproc.policy
POLICY_CAN_OVERRIDE = policy_can_override,initproc.policy
POLICY_CAN_DISCUSS = policy_can_discuss,initproc.policy
POLICY_CAN_RELEASE = policy_can_release,initproc.policy
POLICY_CAN_CONCLUDE = policy_can_conclude,initproc.policy
POLICY_CAN_PUBLISH = policy_can_publish,initproc.policy

[platform_user_permission_value_list]
USER_CAN_LOCALISE = Can validate scope setting chosen by a user
USER_CAN_DELETE = Can delete a user and anonymise his contributions
USER_CAN_ACTIVATE = Can activate and deactivate a user account
USER_CAN_NOMINATE = Can add user to Policy Team or Policy Team Lead
USER_CAN_RESET = Can set/reset user email
USER_CAN_INVITE = Can invite new user(s) to the platform
USER_CAN_DIVERSIFY = Can add female/diverse flag to a user
POLICY_CAN_DELETE = Can delete a policy
POLICY_CAN_UNDELETE = Can undelete a policy (moving it to hidden)
POLICY_CAN_UNHIDE = Can unhide a policy (moving it to draft)
POLICY_CAN_HIDE = Can hide a policy
POLICY_CAN_VALIDATE = Can validate a policy
POLICY_CAN_REVIEW = Can review a policy
POLICY_CAN_INVALIDATE = Can invalidate a policy
POLICY_CAN_REJECT = Can reject a policy
POLICY_CAN_OVERRIDE = Can override normal policy workflow
POLICY_CAN_DISCUSS = Can move a policy into discussion
POLICY_CAN_RELEASE = Can release a policy into vote
POLICY_CAN_CONCLUDE = Can conlude a policy vote
POLICY_CAN_PUBLISH = Can publish a policy

; vote states (moved from initproc/globals.py)
[policy_vote_state_list]
NO = 0
YES = 1
ABSTAIN = 2

[policy_vote_state_value_list]
NO = {% trans "No" %}
YES = {% trans "Yes" %}
ABSTAIN = {% trans "Abstain" %}

; notifications (moved from initproc/globals.py)
; there are states, values and descriptions, this should be the only place to 
; define them. As pinax cannot handle notifications based on models (auth) and
; there seeems no way to associate a notification to a permission, we
; prefix by model... meh, not good, split in restricted and public
[notification_restricted_state_list]
USER_LOCALISATION_REQUESTED = user_localisation_requested
USER_DELETION_REQUESTED = user_deletion_requested

; map restricted permissions to notifications so settings can be displayed
[notification_restricted_state_permission_mapping_list]
USER_LOCALISATION_REQUESTED = user_can_localise
USER_DELETION_REQUESTED = user_can_delete

[notification_public_state_list]
USER_LOCALISATION_ACCEPTED = user_localisation_accepted
POLICY_SUPPORT_INVITE = policy_invite_sent
POLICY_SUPPORT_ACCEPTED = policy_invite_accepted
POLICY_SUPPORT_REJECTED = policy_invite_rejected
POLICY_EDITED = policy_edited
POLICY_SUBMITTED = policy_submitted
POLICY_VALIDATED = policy_validated
POLICY_INVALIDATED = policy_invalidated
POLICY_REJECTED = policy_rejected
POLICY_CHALLENGED = policy_challenged
POLICY_DISCUSSED = policy_discussed
POLICY_CLOSED = policy_closed
POLICY_ARGUMENT_NEW = policy_new_argument
POLICY_PROPOSAL_NEW = policy_new_proposal
POLICY_FINALISED = policy_finalised
POLICY_REVIEWED = policy_reviewed
POLICY_RELEASED = policy_released
POLICY_CONCLUDED = policy_concluded
POLICY_PUBLISHED = policy_published
; -----------------------
DISCUSSION_CLOSED = init_discussion_closed
WENT_TO_VOTE = init_vote
ACCEPTED = init_accepted

; header in notification window
[notification_i18n_todo_list]
USER_LOCALISATION_REQUESTED = {% trans "Localisation Requests" %}
USER_LOCALISATION_ACCEPTED = {% trans "Localisation Validated" %}
USER_DELETION_REQUESTED = {% trans "Deletion Requests" %}
POLICY_SUPPORT_INVITE = {% trans "Support Requests" %}
POLICY_SUPPORT_ACCEPTED = {% trans "Support Pledges" %}
POLICY_SUPPORT_REJECTED = {% trans "Support Declines" %}
POLICY_EDITED = {% trans "Policy Edits" %}
POLICY_SUBMITTED = {% trans "Policy Submits" %}
POLICY_VALIDATED = {% trans "Policy Validations" %}
POLICY_INVALIDATED = {% trans "Policy Invalidatons" %}
POLICY_REJECTED = {% trans "Policy Rejected" %}
POLICY_CHALLENGED = {% trans "Policy Challenged" %}
POLICY_DISCUSSED = {% trans "Policy in Discussion" %}
POLICY_CLOSED = {% trans "Policy Closed" %}
POLICY_ARGUMENT_NEW = {% trans "Policy Argument Submitted" %}
POLICY_PROPOSAL_NEW = {% trans "Policy Proposal Submitted" %}
POLICY_FINALISED = {% trans "Policy Finalisations" %}
POLICY_REVIEWED = {% trans "Policy Reviews" %}
POLICY_RELEASED = {% trans "Policy Releases" %}
POLICY_CONCLUDED = {% trans "Policy Concluded" %}
POLICY_PUBLISHED = {% trans "Policy Published" %}
; ---------------
DISCUSSION_CLOSED = {% trans "Initiatives to finalise" %}
WENT_TO_VOTE = {% trans "Initiative to Vote on" %}
ACCEPTED = {% trans "Initiatives accepted" %}

[notification_i18n_value_list]
USER_LOCALISATION_REQUESTED = {% trans "Localisation Request" %}
USER_LOCALISATION_ACCEPTED = {% trans "Localisation Validated" %}
USER_DELETION_REQUESTED = {% trans "Deletion Request" %}
POLICY_SUPPORT_INVITE = {% trans "Support Request" %}
POLICY_SUPPORT_ACCEPTED = {% trans "Support Pledged" %}
POLICY_SUPPORT_REJECTED = {% trans "Support Declined" %}
POLICY_EDITED = {% trans "Policy modified" %}
POLICY_SUBMITTED = {% trans "Policy submitted" %}
POLICY_VALIDATED = {% trans "Policy validated" %}
POLICY_INVALIDATED = {% trans "Policy invalidated" %}
POLICY_REJECTED = {% trans "Policy rejected" %}
POLICY_CHALLENGED = {% trans "Policy challenged" %}
POLICY_DISCUSSED = {% trans "Policy in discussion" %}
POLICY_CLOSED = {% trans "Policy closed" %}
POLICY_ARGUMENT_NEW = {% trans "New Argument posted for Policy" %}
POLICY_PROPOSAL_NEW = {% trans "New Proposal posted for Policy" %}
POLICY_FINALISED = {% trans "Policy finalised" %}
POLICY_REVIEWED = {% trans "Policy reviewable" %}
POLICY_RELEASED = {% trans "Policy released" %}
POLICY_CONCLUDED = {% trans "Policy vote concluded" %}
POLICY_PUBLISHED = {% trans "Policy published" %}
; -------------------
DISCUSSION_CLOSED = {% trans "Discussion for Initiative ended" %}
WENT_TO_VOTE = {% trans "Initiative in Vote" %}
ACCEPTED = {% trans "Initiative accepted" %}
REJECTED = {% trans "Initiative rejected" %}

[notification_i18n_description_list]
USER_LOCALISATION_REQUESTED = {% trans "A user requests a localisation change to be validated." %}
USER_LOCALISATION_ACCEPTED = {% trans "The localisation request was accepted." %}
USER_DELETION_REQUESTED = {% trans "A user requested to delete his account." %}
POLICY_SUPPORT_INVITE = {% trans "You have been invited to support a new Policy." %}
POLICY_SUPPORT_ACCEPTED = {% trans "The user gave his support for this Policy. " %}
POLICY_SUPPORT_REJECTED = {% trans "The user declined support for this Policy." %}
POLICY_EDITED = {% trans "The Policy has been modified by one of the initiators." %}
POLICY_SUBMITTED = {% trans "The Initiative was submitted." %}
POLICY_VALIDATED = {% trans "The Policy has been validated." %}
POLICY_INVALIDATED = {% trans "The Policy has been invalidated." %}
POLICY_REJECTED = {% trans "The Policy has been rejected." %}
POLICY_CHALLENGED = {% trans "The Policy has been challenged and needs additional reviews." %}
POLICY_DISCUSSED = {% trans "The Policy has been moved into discussion." %}
POLICY_CLOSED = {% trans "The Policy has been closed" %}
POLICY_ARGUMENT_NEW = {% trans "A new Argument has bee posted in discussion of this Policy." %}
POLICY_PROPOSAL_NEW = {% trans "A new Proposal has bee posted in discussion of this Policy." %}
POLICY_FINALISED = {% trans "Policy has been submitted for final validation." %}
POLICY_REVIEWED = {% trans "Policy is ready for final review."}
POLICY_RELEASED = {% trans "Policy has been released for vote." %}
POLICY_CONCLUDED = {% trans "Policy vote has been concluded." %}
POLICY_PUBLISHED = {% trans "Policy has been published" %}
; -----------------------
DISCUSSION_CLOSED = {% trans "The Initiative can now be finally modified." %}
WENT_TO_VOTE = {% trans "The Initiative has been put to Vote." %}
ACCEPTED = {% trans "The Initiative has been accepted." %}

; --------------------------- dynamic policy -----------------------------------
; this is a customisable rebuild of initiative. calling it policy for now
; the following will be loaded by a dynamic model to form the base for the 
; policy class later on. This way fields of an policy become configurable
; and as long as simply inserted via form|bootstrap, this should translate ok
[platform_policy_settings]
PLATFORM_POLICY_STATE_DEFAULT = draft
PLATFORM_POLICY_STALE_STATE_LIST = accepted,rejected,hidden,deleted,challenged,voted,concluded,published,closed
PLATFORM_POLICY_STALE_DISCUSSION_LIST = voted,concluded,published,closed
PLATFORM_POLICY_STALE_VOTE_LIST = concluded,published,closed
PLATFORM_POLICY_ADMIN_STATE_LIST = deleted,hidden,submitted,invalidated,challenged
PLATFORM_POLICY_EDIT_STATE_LIST = draft,staged,invalidated,reviewed,finalised
PLATFORM_POLICY_DELETE_STATE_LIST = draft,staged,invalidated,rejected,closed
PLATFORM_POLICY_MODERATION_STATE_LIST = submitted,invalidated,challenged,finalised,rejected
PLATFORM_POLICY_INVITE_STATE_LIST = staged,reviewed,invalidated
PLATFORM_POLICY_INITIATORS_COUNT = 3
PLATFORM_POLICY_RELAUNCH_MORATORIUM_DAYS = 180
PLATFORM_POLICY_SUPPORT_MINIMUM_DAYS = 14
PLATFORM_POLICY_SUPPORT_MAXIMUM_DAYS = 180
PLATFORM_POLICY_SUPPORT_COOLDOWN_DAYS = 14
PLATFORM_POLICY_DISCUSSION_DAYS = 21
PLATFORM_POLICY_VOTING_DAYS = 14
PLATFORM_POLICY_COMMENT_EDIT_SECONDS = 300

[platform_policy_base_config]
title = CharField|max_length=int:255,blank=bool:False
subtitle = CharField|max_length=int:1024,blank=bool:False
description = TextField|blank=bool:False
challenge = TextField|blank=bool:False
demand = TextField|blank=bool:False
expected_cost =TextField|blank=bool:False
proposed_financing = TextField|blank=bool:False
methodology =  TextField|blank=bool:False
initial_argument = TextField|blank=bool:False
;previous-Einordnung/Ebene/Bereich, choices will be set using categories
context = CharField|max_length=int:60
scope = CharField|max_length=int:100
topic = CharField|max_length=int:60
;text_content = TextField|blank=bool:True
;tags = tagulous.forms.TagField|space_delimiter=bool:False,autocomplete_view=string:'policy_tags_autocomplete'

[platform_policy_field_title_dict]
title = {% trans "Headline" %}
subtitle = {% trans "Teaser" %}
description = {% trans "Summary" %}
challenge = {% trans "Situation Assessment" %}
demand = {% trans "Initiative Proposal" %}
expected_cost = {% trans "Cost Estimation" %}
proposed_financing = {% trans "Financial Proposition" %}
methodology = {% trans "Methodolgy" %}
initial_argument = {% trans "Initiator Argument" %}
context = {% trans "Context" %}
scope = {% trans "Scope" %}
topic = {% trans "Topic" %}
text_content= {% trans "Initiative Text" %}
tags = {% trans "Keywords" %}


[platform_policy_field_description_dict]
title = {% trans "The title should state the policy in a short and precise manner." %}
subtitle = {% trans "Briefly describe the problem or situation the policy should adress. Use 1-2 sentences only." %}
description = {% trans "Summarize the policy in a 3-4 sentences." %}
challenge = {% trans "State and assess the situation or problem, the policy should adress in 3-4 sentences." %}
demand = {% trans "What are the concrete demands or proposals?" %}
expected_cost = {% trans "Will the policy cause costs? Try to give an estimation of the cost associated with the policy." %}
proposed_financing = {% trans "Briefly describe ideas of how costs associated with the policy could be covered, for example by financing through taxable income." %}
methodology = {% trans "Have you consulted experts? What information is the assessment based on? Is it possible to name information sources?" %}
initial_argument = {% trans "Please state why this policy is relevant for you and why you are submitting it." %}
context = {% trans "The context this policy is belonging to, for example Health, Economy, Environment." %}
scope = {% trans "The scope for this policy, for example European or EU level." %}
topic = {% trans "The specific challenge this policy can be associated to." %}
;text_content={% trans "The actual policy text content" %}
tags = {% trans "Comma separated list of keywords by which this policy is searchable" %}

; Policy states and transitions (more or less corresponding to initiative states
; used to be globals.py STATES, like "p", "i", etc
;
; Permissions groups recap:
; Owner can view his document
; Manager can do all
; Author can create documents
; Auditor can view documents
; Assignor can view/modify/delete/create documents, assign users to specific documents
; Assignee can view/modify/delete/ only on some documents (assigned);
; Associate can work only on documents under condition (related to something)
;
; scope/context/topic ~ group/function/category
; user role => determines items user can interact with (vote/comment etc)
; user group/function/category => determines items use can view, scope: vote etc
;
; STATE (* public)          TRANSITIONS                                   PERMISSIONS                 
; ---------------------------------------------------------------------------------------------
; draft                     user:edit->draft                              policy_edit*
;                           user:delete->deleted                          policy_delete*
;                           user:stage->staged                            policy_stage*
;                           team:delete->deleted                          *
; closed                    team:delete->deleted                          *
; deleted                   team:undelete->hidden                         policy_undelete*
; staged* (PREPARE)         user:submit->submitted                        policy_submit*
;                           user:edit->staged                             *
;                           user:delete->deleted                          *
;                           team:delete->deleted                          *
;                           mods:publish->published                       policy_publish
;                           user:invite                                   policy_invite*
; submitted (INCOMING)      team:evaluate->staged                         policy_evaluate*
;                           team:evaluate->invalidated                    policy_evaluate*
;                           lead:reject->rejected                         policy_reject*
;                           lead:validate->validated                      policy_validate*
; invalidated               user:edit->invalidated                        *
;                           user:delete->deleted                          *
;                           user:submit->invalidated                      *
; rejected                  user:challenge->challenged                    policy_challenge*
;                           team:delete->deleted                          *
;                           admin:hide->hidden                            policy_hide*
; hidden                    admin:unhide->draft                           policy_unhide*
; challenged                team:evaluate->challenged                     *
;                           lead:reject->rejected                         *
;                           lead:validate->validated                      *
; validated (SEEKINGSUPPORT)user:support->supported                       policy_support*
;                           user:unsupport->closed                        policy_unsupport*
;                           lead:close->closed                            policy_close*
;                           lead:discuss->discussed                       policy_discuss*
; in_discussion             lead:review->in review                        policy_review*
; in review (FINAL_EDIT)    user:edit->in review                          *
;                           user:finalise->finalised                      policy_finalise*
; finalised                 team:evaluate->finalised                      *
;                           lead:reject->rejected                         *
;                           lead:release->voted                           policy_release*
; in vote                   user:vote->conclude                           policy_vote*
; concluded                 team:publish->published                       policy_publish
;                           team:close->closed
; published                 user:amend->staged                            policy_amend
; amended                   team:validate->validated
;                           team:invalidated->amended
;                           team:reject->published
;                           team:publish->published
[platform_policy_state_list]
DRAFT = draft
DELETED = deleted
; staged = taking a policy from draft (private, only user can see) to staged 
; (public, visible on the platform) state. This means a policy can be edited
; until its polished enough. Once staged, other users can see it and the 
; author can ask for co-initiators required for submission
STAGED = staged
SUBMITTED = submitted
INVALIDATED = invalidated
REJECTED = rejected
CLOSED = closed
HIDDEN = hidden
CHALLENGED = challenged
VALIDATED = validated
SUPPORTED = supported
FINALISED = finalised
DISCUSSED = discussed
REVIEWED = reviewed
RELEASED = released
VOTED = voted
CONCLUDED = concluded
PUBLISHED = published

[platform_policy_state_value_list]
DRAFT = {% trans "in preparation" %}
DELETED = {% trans "deleted" %}
STAGED = {% trans "staged" %}
SUBMITTED = {% trans "submitted" %}
INVALIDATED = {% trans "invalidated" %}
REJECTED = {% trans "rejected" %}
CLOSED = {% trans "closed" %}
HIDDEN = {% trans "hidden" %}
CHALLENGED = {% trans "challenged" %}
VALIDATED = {% trans "validated" %}
SUPPORTED = {% trans "supported" %}
FINALISED = {% trans "finalised" %}
DISCUSSED = {% trans "in discussion" %}
REVIEWED = {% trans "in review" %}
RELEASED = {% trans "released" %}
VOTED = {% trans "put to vote" %}
CONCLUDED = {% trans "concluded" %}
PUBLISHED = {% trans "published" %}

; names used but NOT USED to control access, done in guard.py for now
[platform_policy_permission_list]
POLICY_CREATE = policy_create
POLICY_EDIT = policy_edit
POLICY_DELETE = policy_delete
POLICY_SUBMIT = policy_submit
POLICY_INVITE = policy_invite
POLICY_STAGE = policy_stage
POLICY_VALIDATE = policy_validate
POLICY_INVALIDATE = policy_invalidate
POLICY_FINALISE = policy_finalise
POLICY_DISCUSS = policy_discuss
POLICY_REVIEW = policy_review
POLICY_RELEASE = policy_release
POLICY_CONCLUDE = policy_conclude
POLICY_PUBLISH = policy_publish 

[platform_policy_permission_value_list]
POLICY_CREATE = {% trans "Can create new policy" %}
POLICY_EDIT = {% trans "Can edit policy" %}
POLICY_DELETE = {% trans "Can delete policy" %}
POLICY_SUBMIT = {% trans "Can submit policy" %}
POLICY_INVITE = {% trans "Can invite others to co-initiate/support" %}
POLICY_STAGE = {% trans "Can stage a policy" %}
POLICY_VALIDATE = {% trans "Can validate a policy" %}
POLICY_INVALIDATE = {% trans "Can invalidate a policy" %}
POLICY_FINALISE = {% trans "Can finalise a policy" %}
POLICY_DISCUSS = {% trans "Can move a policy into discussion" %}
POLICY_REVIEW = {% trans "Can move a policy into final review" %}
POLICY_RELEASE = {% trans "Can release a policy for a vote" %}
POLICY_CONCLUDE = {% trans "Can conclude a policy vote" %}
POLICY_PUBLISH = {% trans "Can publish a policy" %}

; -------------------------------- moderations ---------------------------------
;used to be q0-q10 on NewModerationForm, now dynamic
[platform_moderation_base_config]
q00 = BooleanField|required=bool:False
q01 = BooleanField|required=bool:False
q02 = BooleanField|required=bool:False
q03 = BooleanField|required=bool:False
q04 = BooleanField|required=bool:False
q05 = BooleanField|required=bool:False
q06 = BooleanField|required=bool:False
q07 = BooleanField|required=bool:False
q08 = BooleanField|required=bool:False
q09 = BooleanField|required=bool:False
q10 = BooleanField|required=bool:False
; Volt additions
q11 = BooleanField|required=bool:False
q12 = BooleanField|required=bool:False

[platform_moderation_field_title_dict]
q00 = {% trans "contradicts with human rights/dignity" %}
q01 = {% trans "contains pejorative terms against certain groups (eg Immigrants)" %}
q02 = {% trans "is excluding/racist/homophobe/discriminatroy/transphoe/sexist" %}
q03 = {% trans "is nationalistic" %}
q04 = {% trans "is undemocratic" %}
q05 = {% trans "leads to less transparency" %}
q06 = {% trans "leads to more patronizing or exclusion of persons in participating" %}
q07 = {% trans "is putting a burden on future generations" %}
q08 = {% trans "endangers the climate and our planet" %}
q09 = {% trans "leads to a widening of the prosperity divide" %}
q10 = {% trans "puts disadvantaged groups or persons at even more disadvantages" %}
; Volt additions
q11 = {% trans "is not realistic/best practice/evident based on sources and budgeting provided" %}
q12 = {% trans "is a duplicate of an existing published or pending Policy" %}

[policy_moderation_state_list]
NO = n
YES = y
;ABSTAIN = a
REQUEST = r

[policy_moderation_state_value_list]
NO = {% trans "Reject Policy proposal" %}
YES = {% trans "Accept Policy proposal" %}
;ABSTAIN = {% trans "Abstain from validating the Proll" %}
REQUEST = {% trans "Request Improvements" %}

; ------------------------------- categories -----------------------------------
; scope (previous Ebene)
; set on initiatives and users, determines permission to vote on an initiative
; and edit/view initiatives. Scope on users is validated by custom groups
; Default scope: EU => can only vote on european initiatives
; Set to EU/[country] => can vote on european and national initiatives
;   eg EU/France: vote on EU and France initiatives
; Set to EU/[country]/[city] => can vote on european, national, local level
;   eg EU/France/Paris: vote on EU, France, Paris initiatives
;   eg EU/France/Lille: vote on EU, France, Lille initiatives (not Paris)
[scope_list]
EU = eu
EU_AT = eu-at
EU_BE = eu-be
EU_BG = eu-bg
EU_HR = eu-hr
EU_CY = eu-cy
EU_CZ = eu-cz
EU_DK = eu-dk
EU_EE = eu-ee
EU_FI = eu-fi
EU_FR = eu-fr
EU_FR_PARIS = eu-fr-paris 
EU_FR_LILLE = eu-fr-lille
EU_FR_TOULOUSE = eu-fr-toulouse
EU_DE = eu-de
EU_GR = eu-gr
EU_HU = eu-hu
EU_IE = eu-ie
EU_IT = eu-it
EU_LV = eu-lv
EU_LT = eu-lt
EU_LU = eu-lu
EU_MT = eu-mt
EU_NL = eu-nl
EU_PL = eu-pl
EU_PT = eu-pt
EU_RO = eu-ro
EU_SK = eu-sk
EU_SI = eu-si
EU_ES = eu-es
EU_SE = eu-se
EU_GB = eu-gb

[scope_value_list]
EU = {% trans "Europe" %}
EU_AT = {% trans "Europe/Austria" %}
EU_BE = {% trans "Europe/Belgium" %}
EU_BG = {% trans "Europe/Bulgaria" %}
EU_HR = {% trans "Europe/Croatia" %}
EU_CY = {% trans "Europe/Cyprus" %}
EU_CZ = {% trans "Europe/Czech Republic" %}
EU_DK = {% trans "Europe/Denmark" %}
EU_EE = {% trans "Europe/Estonia" %}
EU_FI = {% trans "Europe/Finland" %}
EU_FR = {% trans "Europe/France" %}
EU_FR_PARIS = {% trans "Europe/France/Paris" %}
EU_FR_LILLE = {% trans "Europe/France/Lille" %}
EU_FR_TOULOUSE = {% trans "Europe/France/Toulouse" %}
EU_DE = {% trans "Europe/Germany" %}
EU_GR = {% trans "Europe/Greece" %}
EU_HU = {% trans "Europe/Hungary" %}
EU_IE = {% trans "Europe/Ireland" %}
EU_IT = {% trans "Europe/Italy" %}
EU_LV = {% trans "Europe/Latvia" %}
EU_LT = {% trans "Europe/Lithuania" %}
EU_LU = {% trans "Europe/Luxembourg" %}
EU_MT = {% trans "Europe/Malta" %}
EU_NL = {% trans "Europe/Netherlands" %}
EU_PL = {% trans "Europe/Poland" %}
EU_PT = {% trans "Europe/Portugal" %}
EU_RO = {% trans "Europe/Romania" %}
EU_SK = {% trans "Europe/Slovakia" %}
EU_SI = {% trans "Europe/Slovenia" %}
EU_ES = {% trans "Europe/Spain" %}
EU_SE = {% trans "Europe/Sweden" %}
EU_GB = {% trans "Europe/United Kingdom" %}

; topic, previous "Bereich"
[topic_list]
SMART_STATE = smart_state
ECONOMIC_RENAISSANCE = economic_renaissance
SOCIAL_EQUALITY = social_equalty
GLOBAL_BALANCE = global_balance
CITIZEN_EMPOWERMENT = citizen_empowerment
EU_REFORM = eu_reform

[topic_value_list]
SMART_STATE = {% trans "Smart State" %}
ECONOMIC_RENAISSANCE = {% trans "Economic Rennaisance" %}
SOCIAL_EQUALITY = {% trans "Social Equality" %}
GLOBAL_BALANCE = {% trans "Global Balance" %}
CITIZEN_EMPOWERMENT = {% trans "Citizen Empowerment" %}
EU_REFORM = {% trans "EU Reform" %}

; context, previous "Einordnung"
; contrary to upstream I would not mix different types of votes into the
; initiative process. A modification could always be made via an amendment and 
; a new state while different types of votes in theory belong somewhere else
; and in practive should have their own equivalent to initiative and not taint
; the initiative process. Long story short, context should be relevant for an 
; initiative and not hijacked for other purposes
[context_list]
FINANCE = finance
FOREIGN_POLICY = foreign_policy
DOMESTIC_POLICY = domestic_policy
ECONOMY = economy
ENERGY = energy
JUSTICE_CONSUMER_PROTECTION = justice_consumer_protection
LABOR_SOCIAL_WELFARE = labor_social_welfare
DEFENSE = defense
AGRICULTURE = agriculture
FAMILY_AFFAIRS = family_affairs
HEALTH = health
TRANSPORT_DIGITAL_INFRASTRUCTURE = transport_digital_infrastructure
ENVIRONMENTAL_PROTECTION = environmental_protection
EDUCATION_RESEARCH = education_research
ECONOMIC_COOPERATION_DEVELOPMENT = economic_cooperation_development

[context_value_list]
FINANCE = {% trans "Finance" %}
FOREIGN_POLICY = {% trans "Foreign Policy" %}
DOMESTIC_POLICY = {% trans "Domestic Policy" %}
ECONOMY = {% trans "Economy" %}
ENERGY = {% trans "Energy" %}
JUSTICE_CONSUMER_PROTECTION = {% trans "Justice and Consumer Protection" %}
LABOR_SOCIAL_WELFARE = {% trans "Labor and Social Welfare" %}
DEFENSE = {% trans "Defense" %}
AGRICULTURE = {% trans "Agriculture" %}
FAMILY_AFFAIRS = {% trans "Family Affairs" %}
HEALTH = {% trans "Health" %}
TRANSPORT_DIGITAL_INFRASTRUCTURE = {% trans "Transport and Digital Infrastructure" %}
ENVIRONMENTAL_PROTECTION = {% trans "Environmental Protection" %}
EDUCATION_RESEARCH = {% trans "Education and Research" %}
ECONOMIC_COOPERATION_DEVELOPMENT = {% trans "Economic Cooperation and Development" %}





